<?xml version="1.0" encoding="UTF-8"?>
<project 
  name="Build file for gigapaxos"
  basedir="."
  default="jar" >

  <property name="src.dir" value="src"/>
  <property name="testsrc.dir" location="test"/>
  <property name="build.dir" value="build"/>
  <property name="build.classes.dir" value="${build.dir}/classes"/>
  <property name="build.test.classes.dir" value="${build.dir}/test/classes"/>
  <property name="test.dir" value="src" />
  <property name="build.test.dir" value="${build.dir}/test"/>
  <property name="build.jar.dir" value="${build.dir}/jars"/>
  <property name="lib.dir" value="lib"/>
  <property name="dist.dir" value="dist"/>
    
  <!-- Properties -->
  <property file="build.properties" />
  
  <path id="classpath.base">
    <pathelement location="${build.dir}"/>
    <pathelement location="${build.classes.dir}"/>
    <!--    <pathelement location="${conf.dir}"/>-->
    <fileset dir="${lib.dir}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="init">
    <tstamp/>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.classes.dir}"/>
  </target>

  <target name="compile" depends="init, buildnumber" description="compile java files">
    <javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="true" debuglevel="lines,vars,source"
           includeantruntime="false">
      <compilerarg value="-Xlint:unchecked"/>
      <classpath refid="classpath.base"/>
    </javac>
  </target>
  
  <target name="gigapaxos_jarbuild" depends="compile" description="generate jar files for gigpaxos">
    <mkdir dir="${build.jar.dir}"/>
    <jar destfile="${build.jar.dir}/gigapaxos-1.0.jar" filesetmanifest="mergewithoutmain">
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor"
                   value="University of Massachusetts" />
        <attribute name="Implementation-Title" value="GNS Gigapaxos Library" />
        <attribute name="Implementation-Version"
                   value="${VERSION}-${RELEASE}" />
        <attribute name="Class-Path" value="."/>
        <attribute name="Build-Version" value="${version.code}" />
      </manifest>
      <fileset dir="${build.classes.dir}" includes="**/*.class" />
      <zipgroupfileset dir="${lib.dir}" includes="**/*.jar" />
    </jar>
  </target>
    
  <target name="nio_jarbuild" depends="compile" description="generate jar files for nio">
    <mkdir dir="${build.jar.dir}"/>
    <jar destfile="${build.jar.dir}/nio-1.2.jar" filesetmanifest="mergewithoutmain">
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor"
                   value="University of Massachusetts" />
        <attribute name="Implementation-Title" value="GNS Nio Library" />
        <attribute name="Implementation-Version"
                   value="${VERSION}-${RELEASE}" />
        <attribute name="Build-Version" value="${version.code}" />
      </manifest>
      <fileset dir="${build.classes.dir}" includes="edu/umass/cs/nio/**/*.class"/>
      <fileset dir="${build.classes.dir}" includes="edu/umass/cs/utils/*.class"/>
      <fileset dir="${build.classes.dir}" includes="org/json/*.class"/>
      <!-- interesting special cases here added because of one use of ReconfigurableClient in NIOInstrumenter -->
      <fileset dir="${build.classes.dir}" includes="edu/umass/cs/reconfiguration/**/*.class"/>
      <fileset dir="${build.classes.dir}" includes="edu/umass/cs/gigapaxos/**/*.class"/>
      <fileset dir="${build.classes.dir}" includes="edu/umass/cs/protocoltask/**/*.class"/>
      
      <!--      <fileset dir="${conf.dir}" includes="trustStore/**, keystore/**" />-->
    </jar>
  </target>
  
  <target name="gigapaxos_nio_src_jarbuild" depends="compile" description="generate source jar">
    <mkdir dir="${build.jar.dir}"/>
    <jar destfile="${build.jar.dir}/gigapaxos-nio-src.jar">
      <fileset dir="${src.dir}" includes="**/*.java"/>
    </jar>
  </target>
  
  <target name="clean" description="remove generated files">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
    <!--    <delete dir="${jars.dir}"/>-->
  </target>

  <target name="doc" description="generate javadoc">
    <mkdir dir="${build.dir}/doc"/>
    <javadoc packagenames="edu.umass.cs.*" 
             sourcepath="${src.dir}" 
             destdir="${build.dir}/doc"
             additionalparam="-Xdoclint:none">
      <classpath refid="classpath.base"/>
      <!--      <link href="http://java.sun.com/javase/6/docs/api/"/>-->
    </javadoc>
    <mkdir dir="${dist.dir}/doc"/>
    <copy todir="${dist.dir}/doc">
      <fileset dir="${build.dir}/doc" includes="**"/>
    </copy> 
  </target>
    
  <target name="jar" depends="gigapaxos_jarbuild, nio_jarbuild, gigapaxos_nio_src_jarbuild">
    <mkdir dir="${dist.dir}"/>
    <copy todir="${dist.dir}">
      <fileset dir="${build.jar.dir}" includes="*.jar"/>
    </copy>  
  </target>
  
  <path id="classpath.test">
    <pathelement location="${build.classes.dir}"/>
    <pathelement location="${lib.dir}/junit-4.12.jar"/>
    <pathelement location="${lib.dir}/hamcrest-all-1.3.jar"/>
    <pathelement location="${lib.dir}/c3p0-0.9.5.jar"/>
    <pathelement location="${lib.dir}/derby.jar"/>
    <pathelement location="${lib.dir}/json-smart-1.2.jar"/>
    <pathelement location="${lib.dir}/mchange-commons-java-0.2.9.jar"/>
    <pathelement location="${lib.dir}/mapdb-2.0.0-20151103.120435-149.jar"/>
    <pathelement location="${lib.dir}/zookeeper-3.3.6.jar"/>
    <!--    <pathelement location="${conf.dir}"/>-->
  </path>
  
  <target name="ensure-test-name" unless="test">
    <fail message="You must run this target with -Dtest=TestName"/>
  </target>

  <target name="compiletest" depends="compile" description="Compile all the test files">
    <mkdir dir="${build.test.dir}" />
    <mkdir dir="${build.test.classes.dir}" />
    <javac srcdir="${test.dir}" 
           destdir="${build.test.classes.dir}" 
           debug="on"
           includeantruntime="false">
      <classpath refid="classpath.test"/>
    </javac>
  </target>
  
  <target name="runtest" description="Runs the test you specify on the command line with -Dtest=" 
          depends="compiletest, ensure-test-name">
    <junit printsummary="withOutAndErr" fork="yes" showoutput="true"
haltonerror="on"> 
      <!--      <jvmarg value="-Djavax.net.ssl.trustStorePassword=qwerty"/>
      <jvmarg value="-Djavax.net.ssl.trustStore=conf/trustStore/node100.jks"/>
      <jvmarg value="-Djavax.net.debug=ssl"/>-->
      <jvmarg value="-ea"/>
      <jvmarg value="-Djava.util.logging.config.file=logging.properties"/>
      <classpath>
        <pathelement location="${build.test.classes.dir}"/>
      </classpath>
      <!-- Make sure these libraries are included -->
      <classpath refid="classpath.test" />
      <formatter type="plain" usefile="false"/>
      <batchtest>
        <fileset dir="${test.dir}">
          <include name="**/${test}.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>
    

  <target name="all" depends="clean,jar"
          description="build all files"/>
    
  <target name="buildnumber" description="Generates version number and sets it in properties file.">
    <buildnumber file="build.number" />

    <property name="version.code" value="${VERSION}_${RELEASE}_build${build.number}" />

    <echo>Version: ${version.code}</echo>

  </target>
</project>
